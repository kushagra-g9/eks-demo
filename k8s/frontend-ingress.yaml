apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: three-tier-ingress
  annotations:
    # Essential annotation to tell AWS Load Balancer Controller to provision an ALB
    kubernetes.io/ingress.class: alb
    # Optional: Configure ALB scheme (internal or internet-facing)
    alb.ingress.kubernetes.io/scheme: internet-facing
    # Optional: Listener port for the ALB
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    # Optional: Health check path for the ALB target group
    alb.ingress.kubernetes.io/healthcheck-path: /index.html
    # Optional: Health check protocol
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    # Optional: Target type (instance or ip)
    alb.ingress.kubernetes.io/target-type: ip
    # Optional: SSL certificate ARN for HTTPS (if you want HTTPS)
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:REGION:ACCOUNT_ID:certificate/CERT_ID
    # Optional: Redirect HTTP to HTTPS
    # alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
  labels:
    app: frontend
spec:
  rules:
  - http:
      paths:
      - path: / # Route all traffic to the frontend service
        pathType: Prefix
        backend:
          service:
            name: frontend-service # Name of your frontend ClusterIP service
            port:
              number: 80 # Port of the frontend service
      - path: /api # Route /api traffic to the backend service
        pathType: Prefix
        backend:
          service:
            name: backend-service # Name of your backend ClusterIP service
            port:
              number: 5000 # Port of the backend service