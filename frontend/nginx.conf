# This file is for your local Docker testing environment.
# It should be copied to /etc/nginx/conf.d/default.conf inside your frontend container.
# It should ONLY contain server blocks and upstream blocks.
# The 'events' and 'http' blocks are defined in the main Nginx configuration file
# and should NOT be duplicated here.

server {
    # Listen on port 80 for incoming HTTP connections.
    listen 80;
    # Listen on IPv6 port 80 as well.
    listen [::]:80;

    # Set the server name. 'localhost' is suitable for local testing.
    server_name localhost;

    # Define the root directory where Nginx will look for static files.
    # This path corresponds to where your built React/Vue/Angular app is copied
    # inside the Docker container (e.g., /usr/share/nginx/html).
    root /usr/share/nginx/html;

    # Specify the default files to serve when a directory is requested.
    index index.html index.htm;

    # IMPORTANT: Add the resolver directive here for Docker's internal DNS.
    # The IP '172.18.0.1' is the gateway of your 'three-tier-network'
    # (as seen in `docker network inspect three-tier-network`).
    # 'valid=5s' means Nginx will cache the DNS resolution for 5 seconds,
    # then re-resolve if needed.
    #resolver 172.18.0.1 valid=5s; remove if you are using docker-compose

    # Proxy API requests to the backend service.
    # 'backend' is the container name of your backend service on the 'three-tier-network'.
    # '5000' is the port your backend application listens on internally.
    location /api/ {
        proxy_pass http://backend:5000/api/;
        # Preserve the original Host header from the client.
        proxy_set_header Host $host;
        # Pass the client's real IP address.
        proxy_set_header X-Real-IP $remote_addr;
        # Pass the original protocol (HTTP or HTTPS).
        proxy_set_header X-Forwarded-Proto $scheme;
        # Append client's IP to the X-Forwarded-For header for a chain of proxies.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Serve your React app's static files and handle client-side routing.
    # This is crucial for Single Page Applications (SPAs).
    # It tries to serve the requested URI, then the URI as a directory,
    # and if neither is found, it falls back to serving index.html.
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Optional: Custom error pages can be configured here.
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     root /usr/share/nginx/html;
    # }
}
